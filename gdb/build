#!/bin/sh
#
# Setup a build env and build gdb similar to how ports builds it

# Figure out some variables
version=`uname -r | cut -d- -f1`
arch=`uname -m`
case $arch in
	amd64)
		cfgarch=x86_64
		obj=obj
		;;
	*)
		cfgarch=${arch}
		obj=obj.${arch}
		;;
esac

datadir=`ls -d /usr/local/share/gdb* 2>/dev/null | head -1`
if [ -z "$sharedir" ]; then
    datadir=/usr/local/share/gdb
fi
if [ -x /usr/local/bin/python2.7 -a -z "${WITHOUT_PYTHON}" ]; then
    PYTHON="/usr/local/bin/python2.7"
    PYTHON_CFG="--with-python=${PYTHON}"
else
    PYTHON=""
    PYTHON_CFG="--without-python"	
fi

LDFLAGS=
CONFIGURE_ENV=
if [ -n "${WITH_GCC}" ]; then
    CC="${WITH_GCC}"
    CXX=$(echo ${WITH_GCC} | sed -e 's/gcc/g++/')
    WERROR=""
elif [ -n "${XMIPS}" ]; then
    obj=obj.mips
    version=12.0
    PYTHON=""
    PYTHON_CFG="--without-python"
    ROOTFS="/home/john/work/qemu/mips/rootfs"
    CC="mips-unknown-freebsd11.1-gcc -nostdinc -march=mips3 --sysroot=${ROOTFS} -isystem ${ROOTFS}/usr/include -B ${ROOTFS}/usr/lib -L${ROOTFS}/usr/lib -msoft-float"
    CXX="mips-unknown-freebsd11.1-g++ -nostdinc -nostdinc++ -march=mips3 --sysroot=${ROOTFS} -isystem ${ROOTFS}/usr/include/c++/v1 -isystem ${ROOTFS}/usr/include -B ${ROOTFS}/usr/lib -L${ROOTFS}/usr/lib -msoft-float"
    WERROR="--disable-werror"
    CONFIGURE_ENV="${CONFIGURE_ENV} gl_cv_func_gettimeofday_clobber=no"
elif [ -n "${XMIPS64}" ]; then
    obj=obj.mips64
    version=12.0
    PYTHON=""
    PYTHON_CFG="--without-python"
    ROOTFS="/home/john/work/qemu/mips64/rootfs"
    CC="mips-unknown-freebsd11.1-gcc -nostdinc -mabi=64 --sysroot=${ROOTFS} -isystem ${ROOTFS}/usr/include -B ${ROOTFS}/usr/lib -L${ROOTFS}/usr/lib -msoft-float"
    CXX="mips-unknown-freebsd11.1-g++ -nostdinc -nostdinc++ -mabi=64 --sysroot=${ROOTFS} -isystem ${ROOTFS}/usr/include/c++/v1 -isystem ${ROOTFS}/usr/include -B ${ROOTFS}/usr/lib -L${ROOTFS}/usr/lib -msoft-float"
    WERROR="--disable-werror"
    CONFIGURE_ENV="${CONFIGURE_ENV} gl_cv_func_gettimeofday_clobber=no"
elif [ -n "${CHERI_MIPS}" ]; then
    obj=obj.cheri
    version=12.0
    PYTHON=""
    PYTHON_CFG="--without-python"
    ROOTFS="/usr/obj/mips.mips64/usr/home/john/work/cheri/git/cheribsd/tmp"
    CC="/usr/cheri/bin/clang --sysroot=${ROOTFS} -B ${ROOTFS}/usr/bin -B ${ROOTFS}/legacy/usr/bin -msoft-float -mstack-alignment=32"
    CXX="/usr/cheri/bin/clang++ --sysroot=${ROOTFS} -B ${ROOTFS}/usr/bin -B ${ROOTFS}/legacy/usr/bin -msoft-float -mstack-alignment=32"
    LDFLAGS="-fuse-ld=lld"
    EXTRA_CFLAGS="-Wno-absolute-value -Wno-parentheses-equality"
    EXTRA_CFLAGS="${EXTRA_CFLAGS} -Wno-unknown-warning-option"
    WERROR="--disable-werror"
    CONFIGURE_ENV="${CONFIGURE_ENV} gl_cv_func_gettimeofday_clobber=no"
elif [ -n "${XAARCH64}" ]; then
    obj=obj.aarch64
    version=12.0
    PYTHON=""
    PYTHON_CFG="--without-python"
    ROOTFS="/mnt"
    LDFLAGS="-fuse-ld=lld"
    CC="clang -target aarch64-freebsd12.0 --sysroot=${ROOTFS}"
    CXX="clang++ -target aarch64-freebsd12.0 --sysroot=${ROOTFS}"
    WERROR="--disable-werror"
    CONFIGURE_ENV="${CONFIGURE_ENV} gl_cv_func_gettimeofday_clobber=no"
else
    CC="cc"
    CXX="c++"
    if [ -x /usr/bin/clang -a /usr/bin/clang -ef /usr/bin/cc ]; then
	# clang-specific warnings to disable
	EXTRA_CFLAGS="-Wno-absolute-value -Wno-parentheses-equality"
	EXTRA_CFLAGS="${EXTRA_CFLAGS} -Wno-unknown-warning-option"
    fi
    WERROR="--disable-werror"
fi

if [ -n "${WITH_CXX}" ]; then
    CXX_CFG="--enable-build-with-cxx"
else
    CXX_CFG=""
fi

# First, make an obj tree
mkdir $obj

# Next, run configure
CONFIGURE_ARGS="--enable-targets=all \
--with-gdb-datadir=${datadir} --with-separate-debug-dir=/usr/lib/debug \
--without-libunwind-ia64 --with-expat ${PYTHON_CFG} --enable-tui \
--prefix=/usr/local  --mandir=/usr/local/man --infodir=/usr/local/info/ \
--build=${cfgarch}-portbld-freebsd${version} --disable-nls ${WERROR} \
--disable-ld --enable-64-bit-bfd ${CXX_CFG}"

if [ -n "${XMIPS}" ]; then
    CONFIGURE_ARGS="${CONFIGURE_ARGS} --host=mips-freebsd --without-expat"
elif [ -n "${XMIPS64}" ]; then
    CONFIGURE_ARGS="${CONFIGURE_ARGS} --host=mips64-freebsd --without-expat"
elif [ -n "${XAARCH64}" ]; then
    CONFIGURE_ARGS="${CONFIGURE_ARGS} --host=aarch64-freebsd --without-expat"
elif [ -n "${CHERI_MIPS}" ]; then
    CONFIGURE_ARGS="${CONFIGURE_ARGS} --host=mips64-freebsd --without-expat"
fi

(cd $obj;
 env CC_FOR_BUILD="cc" CC="${CC}" CPP="cpp" CXX="${CXX}" \
     CFLAGS="-pipe  -DRL_NO_COMPAT -Wno-unused-function -Wno-unused-variable ${EXTRA_CFLAGS} -g -DLIBICONV_PLUG -g -fno-strict-aliasing -std=gnu89" \
     CPPFLAGS="-DLIBICONV_PLUG -I/usr/local/include" \
     CXXFLAGS="-pipe -DRL_NO_COMPAT -Wno-unused-function -Wno-unused-variable ${EXTRA_CFLAGS} -g -DLIBICONV_PLUG -g -fno-strict-aliasing" \
     LDFLAGS="${LDFLAGS} -L/usr/local/lib" LIBS="" \
     INSTALL="/usr/bin/install -c " \
     INSTALL_DATA="install   -m 0644" \
     INSTALL_LIB="install    -m 444" \
     INSTALL_PROGRAM="install    -m 555" \
     INSTALL_SCRIPT="install   -m 555" \
     CONFIGURED_M4=m4 CONFIGURED_BISON=byacc TMPDIR="/tmp" MAKE=gmake \
     PYTHON="${PYTHON}" SHELL=/bin/sh CONFIG_SHELL=/bin/sh \
     CONFIG_SITE=/usr/ports/Templates/config.site \
     lt_cv_sys_max_cmd_len=262144 ${CONFIGURE_ENV} \
     ../configure ${CONFIGURE_ARGS} )
